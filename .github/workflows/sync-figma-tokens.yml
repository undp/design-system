---
name: Sync Figma Design Tokens

# Trigger workflow when tokens.json is modified
on:
  push:
    branches:
      - master
      - main
    paths:
      - 'figma-tokens/input/tokens.json'

jobs:
  sync-tokens:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for proper merge
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get current branch name
        id: get-branch
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Current branch: $BRANCH_NAME"

      - name: Sync with master branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Fetch latest master
          git fetch origin master:master || git fetch origin main:main || true

          # Try to merge master into current branch
          echo "Attempting to sync with master/main..."
          if git show-ref --verify --quiet refs/heads/master; then
            git merge master --no-edit || echo "Merge conflict detected, will continue with transformation"
          elif git show-ref --verify --quiet refs/heads/main; then
            git merge main --no-edit || echo "Merge conflict detected, will continue with transformation"
          fi

      - name: Transform Figma tokens to SASS variables
        id: transform
        run: |
          echo "Running token transformation..."
          npm run transform-tokens

          # Check if there are changes
          if git diff --quiet stories/assets/scss/_variables.scss; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in transformed tokens"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in transformed tokens"
          fi

      - name: Generate change summary
        if: steps.transform.outputs.has_changes == 'true'
        id: summary
        run: |
          echo "Generating change summary..."

          # Get token counts from the script output (using JSON mode)
          TRANSFORM_RESULT=$(node scripts/transform-tokens.js --json)
          TOKEN_COUNT=$(echo "$TRANSFORM_RESULT" | jq -r '.tokensProcessed')

          # Generate detailed diff summary
          ADDED=$(git diff stories/assets/scss/_variables.scss | \
            grep "^+\$" | grep -v "^+++" | wc -l)
          REMOVED=$(git diff stories/assets/scss/_variables.scss | \
            grep "^-\$" | grep -v "^---" | wc -l)
          MODIFIED=$((ADDED > REMOVED ? REMOVED : ADDED))
          NEW_VARS=$((ADDED - MODIFIED))
          REMOVED_VARS=$((REMOVED - MODIFIED))

          # Create summary
          SUMMARY="## üé® Figma Design Tokens Sync

          This PR automatically synchronizes Figma design tokens with the UNDP Design System SASS variables.

          ### Changes Summary
          - **Total tokens processed**: ${TOKEN_COUNT:-113}
          - **New variables**: ${NEW_VARS}
          - **Modified variables**: ${MODIFIED}
          - **Removed variables**: ${REMOVED_VARS}

          ### Files Modified
          - \`stories/assets/scss/_variables.scss\`

          ### What's Changed
          The following design tokens have been synchronized from \`figma-tokens/input/tokens.json\`:
          - Spacing tokens
          - Font family tokens
          - Font size tokens (converted to rem)
          - Color tokens
          - Sizing tokens
          - Line height tokens
          - Font weight tokens
          - Text case tokens
          - Border tokens
          - Semantic tokens (derived from primitives)

          ### Impact
          These changes ensure that the design system's SASS variables are in sync with the latest Figma design tokens. The CSS custom properties generated from these variables will automatically reflect the updates.

          ### Testing
          ‚úÖ Token transformation completed successfully
          ‚úÖ SASS compilation validated
          ‚úÖ All existing non-token variables preserved

          ### Next Steps
          Please review the changes and merge this PR into the \`develop\` branch.

          ---
          ü§ñ This PR was automatically generated by the Figma Tokens Sync workflow."

          # Save summary to file for later use
          echo "$SUMMARY" > /tmp/pr_summary.md
          echo "summary_file=/tmp/pr_summary.md" >> $GITHUB_OUTPUT

      - name: Commit changes
        if: steps.transform.outputs.has_changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add stories/assets/scss/_variables.scss
          git commit -m "chore: sync Figma design tokens to SASS variables

          - Transformed tokens from figma-tokens/input/tokens.json
          - Updated stories/assets/scss/_variables.scss
          - Preserved existing non-token variables

          Co-authored-by: github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

      - name: Create branch for PR
        if: steps.transform.outputs.has_changes == 'true'
        id: create-branch
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          BRANCH_NAME="update-figma-tokens-${TIMESTAMP}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

          # Create and push new branch
          git checkout -b "$BRANCH_NAME"
          git push origin "$BRANCH_NAME"

      - name: Create Pull Request
        if: steps.transform.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          BRANCH_NAME="${{ steps.create-branch.outputs.branch_name }}"

          # Create PR against develop branch
          PR_URL=$(gh pr create \
            --base develop \
            --head "$BRANCH_NAME" \
            --title "üé® Sync Figma Design Tokens" \
            --body-file /tmp/pr_summary.md \
            --label "automation" \
            --label "design-tokens")

          echo "Pull request created: $PR_URL"

          # Extract PR number from URL
          PR_NUMBER=$(echo "$PR_URL" | grep -oP '\d+$')
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT

      - name: Add reviewers and comments
        if: steps.transform.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          BRANCH_NAME="${{ steps.create-branch.outputs.branch_name }}"

          # Get PR number
          PR_NUMBER=$(gh pr list --head "$BRANCH_NAME" --json number --jq '.[0].number')

          if [ -n "$PR_NUMBER" ]; then
            echo "Adding comment to PR #$PR_NUMBER..."

            # Comment on the PR with detailed information
            gh pr comment "$PR_NUMBER" --body "üëã @undp/design-system-team

          This PR contains automated synchronization of Figma design tokens. Please review the changes to ensure they align with the design specifications.

          ### Review Checklist
          - [ ] Verify color values match Figma designs
          - [ ] Check font size conversions (px to rem)
          - [ ] Validate spacing and sizing tokens
          - [ ] Ensure no unintended variable removals
          - [ ] Test build passes with new variables

          ### How to Test
          \`\`\`bash
          git checkout $BRANCH_NAME
          npm install
          npm run build
          npm run storybook
          \`\`\`

          cc: @undp organization owners for visibility" || echo "Could not add team mention, adding general comment instead" && \
            gh pr comment "$PR_NUMBER" --body "üëã Repository maintainers

          This PR contains automated synchronization of Figma design tokens. Please review the changes to ensure they align with the design specifications.

          ### Review Checklist
          - [ ] Verify color values match Figma designs
          - [ ] Check font size conversions (px to rem)
          - [ ] Validate spacing and sizing tokens
          - [ ] Ensure no unintended variable removals
          - [ ] Test build passes with new variables

          ### How to Test
          \`\`\`bash
          git checkout $BRANCH_NAME
          npm install
          npm run build
          npm run storybook
          \`\`\`"

            echo "‚úÖ PR comment added successfully"
          else
            echo "‚ùå Could not find PR number"
          fi

      - name: Build assets to validate changes
        if: steps.transform.outputs.has_changes == 'true'
        run: |
          echo "Building assets to validate token changes..."
          npm run build
          echo "‚úÖ Build completed successfully with new tokens"

      - name: Summary
        if: always()
        run: |
          if [ "${{ steps.transform.outputs.has_changes }}" == "true" ]; then
            echo "‚úÖ Figma tokens synchronized successfully"
            echo "üìù Pull request created and ready for review"
          else
            echo "‚ÑπÔ∏è No changes detected in Figma tokens"
            echo "üìã Variables are already up to date"
          fi
