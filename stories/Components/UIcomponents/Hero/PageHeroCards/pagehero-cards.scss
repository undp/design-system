@use '../../../../assets/scss/variables';
@use '../../../../assets/scss/mixins';
@use '../../../../assets/scss/breakpoints';

/* pagehero card hero start */
.pagehero-cards {
  @include breakpoints.devicebreak(small) {
    &-items {
      .swiper-wrapper {
        margin-left: 0;
        margin-right: 0;
      }
    }
  }

  &-items {
    @include breakpoints.devicebreak(small) {
      overflow: hidden;
    }

    .pagehero-cards-box {
      @include breakpoints.devicebreak(large) {
        flex: 0 0 calc(16.66667% - #{variables.$spacing-06});
        max-width: calc(16.66667% - #{variables.$spacing-06});

        &.large {
          flex: 0 0 calc(25% - #{variables.$spacing-06});
          max-width: calc(25% - #{variables.$spacing-06});
        }
      }

      @include breakpoints.devicebreak(small) {
        margin-left: 0;
      }
    }
  }

  &-box {
    @include breakpoints.devicebreak(medium) {
      margin-bottom: variables.$spacing-06;

      &.swiper-slide {
        height: auto;
        margin-left: 0;
        margin-right: variables.$font-size-20;
      }
    }
  }

  &-top {
    justify-content: center;
    position: relative;

    h2 {
      padding-bottom: 1.875rem;
      text-transform: uppercase;

      @include breakpoints.devicebreak(medium) {
        margin-right: variables.$spacing-04;
      }

      @include breakpoints.devicebreak(large) {
        padding-bottom: 0;
      }
    }

    h3 {
      font-size: variables.$font-size-25;
      font-weight: 700;
      margin-bottom: variables.$font-size-35;
      padding-top: variables.$font-size-20;

      @include breakpoints.devicebreak(large) {
        font-size: 1.875rem;
        padding-top: 0;
      }
    }

    >:nth-child(2) {
      position: relative;

      @include breakpoints.devicebreak(large) {
        margin-left: variables.$spacing-10;
      }

      &::before {
        @extend %absolute__content;

        @include mixins.transform(rotate(90deg));

        background-color: variables.$color-dark-red;
        height: 7rem;
        left: 3.5rem;
        top: -4rem;
        width: 3px;

        @include breakpoints.devicebreak(large) {
          @include mixins.transform(rotate(0));

          height: 80%;
          left: -60px;
          top: 0;
        }
      }
    }
  }

  &-subhead {
    margin-left: 0;
    position: relative;

    @include breakpoints.devicebreak(medium) {
      margin-left: variables.$spacing-10;
    }

    &::before {
      @extend %absolute__content;

      background: variables.$color-dark-red;
      height: 7rem;
      left: 3.5rem;
      top: -4rem;
      transform: rotate(90deg);
      width: 3px;

      @include breakpoints.devicebreak(medium) {
        height: 80%;
        left: -60px;
        top: 0;
        transform: rotate(0);
      }
    }
  }

  .swiper-initialized {
    padding-right: variables.$spacing-10;

    @include breakpoints.devicebreak(medium) {
      padding-right: variables.$spacing-13;
    }

    .swiper-scrollbar {
      padding-right: variables.$spacing-10;

      @include breakpoints.devicebreak(medium) {
        padding-right: variables.$spacing-13;
      }
    }
  }
}

[dir='rtl'] {
  .pagehero-cards {
    &-top {
      >:nth-child(2) {
        @include breakpoints.devicebreak(large) {
          margin-right: variables.$spacing-10;
        }

        &::before {
          right: 3.5rem;

          @include breakpoints.devicebreak(large) {
            right: -60px;
          }
        }
      }

      h2 {
        @include breakpoints.devicebreak(medium) {
          margin-left: variables.$spacing-04;
          margin-right: 0;
        }
      }
    }

    .swiper-initialized {
      padding-left: variables.$spacing-10;
      padding-right: 0;

      @include breakpoints.devicebreak(medium) {
        padding-left: variables.$spacing-13;
      }

      .swiper-scrollbar {
        padding-left: variables.$spacing-10;
        padding-right: 0;

        @include breakpoints.devicebreak(medium) {
          padding-left: variables.$spacing-13;
        }
      }

      .swiper-slide-active+.swiper-slide {
        .cta__link {
          i {
            left: unset;
            right: variables.$spacing-05;
          }
        }
      }
    }
  }
}