@import '../../../../assets/scss/variables';
@import '../../../../assets/scss/mixins';

/* content-card start */
$colors: (
  'yellow': var(--undpds-color-yellow),
  'red': var(--undpds-color-red),
  'green': var(--undpds-color-green),
  'blue': var(--undpds-color-azure),
  'gray': var(--undpds-color-gray-100)
);
$backgroundcolors: (
  'yellow': var(--undpds-color-light-yellow),
  'red': var(--undpds-color-light-red),
  'green': var(--undpds-color-light-green),
  'blue': var(--undpds-color-light-azure),
  'gray': var(--undpds-color-gray-100)
);

div.content-card {
  @include transition(all 0.5s);

  background-color: var(--undpds-color-white);
  border-top: 2px solid var(--undpds-color-black);
  height: 100%;
  word-break: break-word;

  >a {
    background: none;
    box-sizing: border-box;
    display: block;
    height: 100%;
    padding-bottom: 2.625rem;
    position: relative;
  }

  h6 {
    @extend %carousel_tag;

    margin-bottom: 0;
    padding: var(--undpds-spacing-05) var(--undpds-spacing-06) 1.625rem;
  }

  &.card {
    h6 {
      padding-bottom: var(--undpds-spacing-05);
    }
  }

  .image {
    position: relative;
    width: 100%;

    img {
      display: block;
      width: 100%;
    }

    &::before {
      @extend %absolute__content;

      @include transition(all 0.9s);

      opacity: 0;
    }
  }

  p {
    font-size: var(--undpds-font-size-16);
    margin: 0;
    padding-top: var(--undpds-spacing-05);
  }

  &.card {
    &:hover {
      background-color: var(--undpds-color-gray-100);
    }
  }

  &.card-emphasize {
    background-color: var(--undpds-color-light-yellow);

    &:hover {
      background-color: var(--undpds-color-yellow);
    }
  }

  &.card,
  &.card-emphasize {
    &:hover {
      &.red {
        .cta--space::after {
          filter: invert(0) brightness(0);
        }

        .cta--arrow::after {
          background-image: url(~icons/arrow-right.svg);
        }
      }

      @each $name,
      $color in $colors {

        &.accent-#{$name},
        &.#{$name} {
          background-color: #{$color};
        }
      }
    }
  }

  &.card-emphasize {

    @each $name,
    $color in $backgroundcolors {

      &.accent-#{$name},
      &.#{$name} {
        background-color: #{$color};
      }
    }
  }

  &:hover {
    background-color: var(--undpds-color-gray-100);

    .image::before {
      opacity: 0.75;
      background: linear-gradient(67.76deg, var(--undpds-color-yellow), transparent 61.11%);
    }

    .cta--space::after {
      @include translate(70%, 0);
    }

    .cta--arrow {
      i {
        width: var(--undpds-spacing-11);

        &::before {
          display: unset;
        }
      }
    }
  }

  &-wrapper {
    >div {
      margin-bottom: var(--undpds-spacing-07);
    }
  }

  .image::before {
    @include background-image(67.76deg, var(--undpds-color-yellow), transparent 61.11%);

    @each $name,
    $color in $colors {
      @include background-image(67.76deg, #{$color}, transparent 61.11%);
    }
  }

  @each $name,
  $color in $colors {

    &.accent-#{$name},
    &.#{$name} {
      .image::before {
        @include background-image(67.76deg, #{$color}, transparent 61.11%);
      }
    }
  }

}

@each $name,
$color in $backgroundcolors {
  .accent-#{$name} div.content-card {

    &.card-emphasize {
      background-color: #{$color};

      @each $name2,
      $color2 in $backgroundcolors {

        &.accent-#{$name2},
        &.#{$name2} {
          background-color: #{$color2};
        }
      }
    }
  }
}

@each $name,
$color in $colors {

  .accent-#{$name} div.content-card {

    .image::before {
      @include background-image(67.76deg, #{$color}, transparent 61.11%);
    }

    @each $name2,
    $color2 in $colors {

      &.accent-#{$name2},
      &.#{$name2} {
        .image::before {
          @include background-image(67.76deg, #{$color2}, transparent 61.11%);
        }
      }
    }

    &.card {
      &:hover {
        background-color: var(--undpds-color-gray-100);
      }
    }

    &.card-emphasize {
      &:hover {
        background-color: #{$color};

        @each $name2,
        $color2 in $colors {

          &.accent-#{$name2},
          &.#{$name2} {
            background-color: #{$color2};
          }
        }
      }
    }


  }
}

.content-caption {
  padding: var(--undpds-spacing-05) var(--undpds-spacing-06) var(--undpds-spacing-06);

  h5,
  h4 {
    margin-bottom: 0;
  }

  .cta__link {
    bottom: var(--undpds-spacing-06);
    position: absolute;
  }

  &_cart {
    height: 100%;

    h5 {
      margin-bottom: var(--undpds-spacing-05);
    }
  }
}

[dir='rtl'] {
  .content-card {
    .image {
      &::before {
        @include transform(scaleX(-1));
      }
    }

    &:hover {
      .cta {
        &--space::after {
          @include transform(translate(-50%, 0) rotate(180deg));
        }

        &--arrow::after {
          margin-left: 0;
          margin-right: var(--undpds-spacing-02);
        }
      }
    }
  }
}

//burmese lang
:lang(my) {
  h6 {
    font-size: var(--undpds-font-size-16);
  }
}

/* content-card start */
