@use '../../../../assets/scss/variables';
@use '../../../../assets/scss/mixins';
@use '../../../../assets/scss/breakpoints';

// Toggle overflow button.
.menu__overflow__item {
  line-height: 0;
  width: 2rem;
  order: 100;
}

.menu__overflow__item .menu__overflow__toggle {
  display: block;
}

.menu__overflow__item.hidden .menu__overflow__toggle {
  display: none;
}

// Overflow toggle button styling.
.menu__overflow__toggle {
  border: none;
  background: transparent;
  font-size: 2rem;
  text-transform: uppercase;
  color: red;
  line-height: 0;
  margin: auto 0;
  border-radius: 100%;
  position: relative;
  cursor: pointer;
  width: auto;
  height: 100%;

  // Three dot icon.
  &:after {
    height: 1.25rem;
    width: 1.25rem;
    content: '...';
    display: table;
    clear: both;
    border-radius: 100%;
    padding-inline: 6px;
    line-height: 0;
    font-family: "ProximaNova", sans-serif;
  }

  &:hover::after {
    background: rgba(0 0 0 / 5%);
  }

  &:active::after {
    background: rgba(0 0 0 / 10%);
    color: white;
  }

  span.hidden {
    display: none;
  }

  &.hidden {
    display: none;
  }

  @include breakpoints.devicebreak(mediumonlytab) {
    display: none;
  }

  // Triangle icon.
  &.toggled:before {
    height: 0;
    width: 0;
    content: '';
    display: table;
    position: absolute;
    inset-inline: 0;
    inset-block-end: 1px;
    border-width: 3rem;
    border: 1rem solid transparent;
    border-block-end-color: variables.$color-gray-200;
    box-shadow: none;
    margin: auto;
  }
}

// Overflow container styling.
.menu__overflow__container {
  position: relative;
  min-height: 4.125rem;
  height: unset;
  background-color: variables.$color-gray-200;
  box-shadow: 0 3px 6px rgb(0 0 0 / 10%);
  order: 100;
  min-width: 100%;

  @include breakpoints.devicebreak(mediumonlytab) {
    display: none;
  }

  &:before {
    position: absolute;
    z-index: 100;
    background-color: red;
    height: 1rem;
    width: 1rem;
    border: 1rem solid gray;
  }

  ul {
    display: flex;
    flex-wrap: wrap;
    max-width: 75%;
    margin: 0 auto;
    padding: 0;
    justify-content: center;
    align-content: center;
    list-style: none;

    >li.menu-item ul.submenu {
      top: calc(100% - 1rem);
    }

    >li {
      padding: 0;
      margin: 0;

      >a {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0 1rem;
        text-align: center;
        border: none;
        background: none;
        font-size: 0.875rem;
        text-transform: uppercase;
        height: 4.125rem;
        color: variables.$color-black;
      }

      &.edge:focus>ul.sub-menu,
      &.edge:focus-within>ul.sub-menu,
      &.edge:hover>ul.sub-menu,
      &.edge>ul.submenu {
        right: 100%;
        left: unset;
      }

      &:hover {
        >a {
          color: #55606e;
        }
      }
    }
  }

  &.hidden {
    display: none;
  }
}

// Dropdown menus in overflow container.
.menu__overflow__container ul.overflow {
  display: flex;
  order: 12;
  width: 100%;
  position: relative;

  >li {
    position: relative;
    display: flex;
    justify-content: center;

    a {
      justify-content: space-between;
      gap: 1rem;
    }

    ul.submenu {
      @extend %frosted-bg;
      box-shadow: 0 3px 6px rgb(0 0 0 / 16%);
      position: absolute;
      z-index: 10;
      flex-direction: column;
      display: none;
      padding: 0;
      margin: 0;
      list-style-type: none;
      min-width: 17rem;
      inset-block-start: 100%;

      li {
        position: relative;
        padding: 0;
        margin: 0;
        justify-content: flex-start;
        width: 100%;

        &.edge:focus>ul.sub-menu,
        &.edge:focus-within>ul.sub-menu,
        &.edge:hover>ul.sub-menu,
        &.open.edge>ul.submenu {
          inset-inline: unset 100%;
        }

        a {
          transition: 0.2s ease;
          line-height: 1.3;
          width: auto;
          padding: 0 1.25rem;
          font-size: 1rem;
          font-weight: normal;
          text-transform: none;
          border-bottom: 1px solid #d4d6d8;
          background: none;
          text-align: inherit;
          min-inline-size: 1rem;
        }

        &.has-submenu>a:after {
          transition: 0.2s ease;
          background: url(#{variables.$img-path-Iconfourback}/chevron-right.svg) no-repeat left center;
          content: "";
          height: 18px;
          width: 1.25rem;
          display: flex;
          margin-inline-start: auto;
          color: variables.$color-dark-red;
        }

        .external-link-animated {
          display: block;
          min-width: 0.75rem;
        }
      }
    }

    &:focus,
    &:focus-within,
    &:hover,
    &.open {
      >ul.submenu {
        position: absolute;
        display: flex;
        flex-direction: column;
      }
    }

    ul.submenu {

      li:focus,
      li:focus-within,
      li:hover,
      li.open {

        >ul.submenu {
          position: absolute;
          display: block;
          inset-block-start: 0%;
          inset-inline-start: 100%;
        }

        &.edge:focus>ul.sub-menu,
        &.edge:focus-within>ul.sub-menu,
        &.edge:hover>ul.sub-menu,
        &.edge>ul.submenu {
          inset-inline-end: 100%;
          inset-inline-start: unset;
        }

        >a:focus,
        >a:focus-within,
        >a:hover,
        >a,
        >a.active {
          transition: 0.2s ease;
          background: variables.$color-blue-600;
          color: variables.$color-white;
        }

        &.has-submenu>a.active:after,
        &.has-submenu>a:after {
          background: url(#{variables.$img-path-Iconfourback}/chevron-right-white.svg) no-repeat left center;
        }
      }
    }
  }
}

// Animate the icons in the dropdown menu on link hover.
.menu__overflow__container {
  li>a.external {
    .external-link-animated {
      &::after {
        @include mixins.transform(rotate(0deg) translate(0, 0));
      }

      &::before {
        @include mixins.transform(rotate(-45deg) translate(0, 0));
      }
    }
  }

  li:hover>a.external {
    .external-link-animated {
      box-shadow: -2px 2px 0 0 variables.$color-white, -4px 0 0 -2px variables.$color-white, -3px 3px 0 -1px variables.$color-white;

      &::after {
        @include mixins.transform(rotate(0deg) translate(5px, -5px));
        border-inline-end-color: variables.$color-white;
        border-block-start-color: variables.$color-white;
      }

      &::before {
        @include mixins.transform(rotate(-45deg) translate(7px, 0));
        background: variables.$color-white;
      }
    }
  }

  li:hover>a.download {
    .download-animated {

      i {
        border-color: variables.$color-white;
      }

      &::after {
        @include mixins.transform(rotate(-45deg) translate(7px, -7px));
        border-block-end-color: variables.$color-white;
        border-inline-start-color: variables.$color-white;
      }

      &::before {
        @include mixins.transform(translate(0, -10px));
        background: variables.$color-white;
      }
    }
  }
}

// RIGHT TO LEFT - Animate the icons in the dropdown menu on link hover.
[dir='rtl'] {
  .menu__overflow__container {
    li>a.external {
      .external-link-animated {
        @include mixins.transform(rotate(270deg));

        &::before {
          @include mixins.transform(rotate(-45deg) translate(1px, 1px));
        }

        &::after {
          @include mixins.transform(rotate(90deg) translate(-1px, -4px));
        }
      }
    }

    li:hover>a.external {
      .external-link-animated {
        @include mixins.transform(rotate(270deg));

        &::before {
          @include mixins.transform(rotate(-45deg) translate(7px, 0));
        }

        &::after {
          @include mixins.transform(rotate(90deg) translate(-6px, -8px));
        }
      }
    }

    li>a.download {
      .download-animated {
        &::after {
          @include mixins.transform(rotate(45deg) translate(0, 0));
        }
      }
    }

    li:hover>a.download {
      .download-animated {
        &::after {
          @include mixins.transform(rotate(45deg) translate(-7px, -7px));
        }
      }
    }
  }
}