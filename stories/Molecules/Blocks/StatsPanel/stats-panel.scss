@use '../../../assets/scss/breakpoints';
@use '../../../assets/scss/variables';
@use '../../../assets/scss/mixins';

// color map
$colors: (
  // 'red': $red-gradient,
  // 'green': $green-gradient,
  // 'blue': $blue-gradient,
  // 'yellow': $yellow-gradient
  'yellow': variables.$color-yellow,
  'red': variables.$color-red,
  'green': variables.$color-green,
  'blue': variables.$color-azure
);

/* statspanel card start */
.stats {
  &-panel {
    @include mixins.transition(300ms all);

    align-items: center;
    background-color: variables.$color-gray-700;
    display: flex;
    justify-content: center;
    min-height: 378px;
    position: relative;

    @include breakpoints.devicebreak(medium) {
      min-height: 787px;
    }

    img {
      @extend %absolute__content;

      @include mixins.transition(300ms all);

      object-fit: cover;
      opacity: 0;
    }

    &:hover,
    &.active {

      &::after,
      img {
        opacity: 1;
      }

      &::after {
        @extend %absolute__content;

        background: linear-gradient(0deg, rgba(255, 235, 0, 0.8), transparent 140%);
        @include mixins.transition(opacity 0.4s cubic-bezier(0.64, 0.05, 0.35, 1.05));
      }

      div.stats-card {
        color: variables.$color-gray-700;

        h2 {
          color: variables.$color-gray-700;
          text-shadow: -1px -1px 0 variables.$color-gray-700, 1px -1px 0 variables.$color-gray-700, -1px 1px 0 variables.$color-gray-700, 1px 1px 0 variables.$color-gray-700;

          @supports (-webkit-text-stroke: 2px variables.$color-gray-700) {
            text-shadow: none;
            -webkit-text-stroke: transparent;
          }
        }
      }
    }

    div.stats-card {
      background-color: transparent;
      color: variables.$color-white;
      max-width: 100%;
      padding: 0 variables.$spacing-06;
      width: 100%;
      word-break: unset;
      z-index: 1;

      &:hover {
        background-color: transparent;
      }

      @include breakpoints.devicebreak(medium) {
        padding: 0 variables.$spacing-05;
      }

      @include breakpoints.devicebreak(large) {
        padding: 0 variables.$spacing-09;
      }

      @include breakpoints.devicebreak(small) {
        h4 {
          font-size: 2.188rem;
          margin-bottom: variables.$spacing-04;
        }
      }

      h2 {
        color: variables.$color-gray-700;
        text-shadow: -1px -1px 0 variables.$color-white, 1px -1px 0 variables.$color-white, -1px 1px 0 variables.$color-white, 1px 1px 0 variables.$color-white;

        @include breakpoints.devicebreak(medium) {
          font-size: 6rem;
        }

        @include breakpoints.devicebreak(large) {
          font-size: 6.875rem;
        }

        @include breakpoints.devicebreak(small) {
          margin-bottom: variables.$spacing-05;
        }

        @supports (-webkit-text-stroke: 2px variables.$color-white) {
          text-shadow: none;
          -webkit-text-stroke: 2px variables.$color-white;
        }
      }

      p {
        height: variables.$spacing-100;
      }
    }

    @each $name,
    $color in $colors {

      &.accent-#{$name},
      &.#{$name} {
        &::after {
          @include mixins.gradient(15deg, #{$color});
        }
      }

      .accent-#{$name} & {
        &::after {
          @include mixins.gradient(15deg, #{$color});
        }

        @each $name2,
        $color2 in $colors {

          &.accent-#{$name2},
          &.#{$name2} {
            &::after {
              @include mixins.gradient(15deg, #{$color2});
            }
          }
        }
      }
    }
  }
}

[dir='rtl'] {
  .stats {
    .stats-panel {
      &:hover {

        @each $name,
        $color in $colors {

          &.accent-#{$name},
          &.#{$name} {
            &::after {
              @include mixins.transform(scaleX(-1));
            }
          }
        }
      }
    }
  }
}

/* statspanel card start */